result[head(game[Vv"])]
}
]
''
""
result[head(game["V"])]
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
myfunc <- function(x,c1,c2,c3,y)
{
if((result[x[c1]]>result[x[c2]]) && x[c3]==1)
y++
print(y/1230)
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y=0)
y
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y=0)
myfunc <- function(x,c1,c2,c3,y)
{
if((result[x[c1]]>result[x[c2]]) && x[c3]==1)
y++
print(y)
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y=0)
myfunc <- function(x,c1,c2,c3,y)
{
if((result[x[c1]]>result[x[c2]]) && x[c3]==1)
y++
print(1)
print(y)
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y=0)
myfunc <- function(x,c1,c2,c3,y)
{
if((result[x[c1]]>result[x[c2]]) && x[c3]==1)
{
y++
print(1)
}
print(y)
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y=0)
myfunc <- function(x,c1,c2,c3,y)
{
if((result[x[c1]]>result[x[c2]]) && x[c3]==1)
{
y++
print(1)
}
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y=0)
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
myfunc <- function(x,c1,c2,c3,y)
{
if((result[x[c1]]>=result[x[c2]]) && x[c3]==1)
{
y++
print(1)
}
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y=0)
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y<-0)
apply(game,2,myfunc,c1="H",c2="V",c3="WIN",y<-0)
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
myfunc <- function(x,c1,c2,c3,y)
{
if((result[x[c1]]>=result[x[c2]]) && x[c3]==1)
{
y++
print(1)
}
}
apply(game,2,myfunc,c1="H",c2="V",c3="WIN",y<-0)
??apply
?apply(array, margin, ...)
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y<-0)
myfunc <- function(x,c1,c2,c3,y)
{
# if((result[x[c1]]>=result[x[c2]]) && x[c3]==1)
# {
#   y++
#   print(1)
# }
#test
print(sum(x[c1],x[c2]))
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y<-0)
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y<-0)
library(reshape2)
myfunc <- function(x,c1,c2,c3,y)
{
# if((result[x[c1]]>=result[x[c2]]) && x[c3]==1)
# {
#   y++
#   print(1)
# }
#test
print(sum(x[c1],x[c2]))
}
library(reshape2)
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y<-0)
as.numeric(game)
myfunc <- function(x,c1,c2,c3,y)
{
# if((result[x[c1]]>=result[x[c2]]) && x[c3]==1)
# {
#   y++
#   print(1)
# }
#test
print(sum(x[c1],x[c2]))
}
library(reshape2)
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y<-0)
class(game["V"])
class(game["H"])
as.numeric(game[,])
as.numeric(game["V"])
apply(game, 2,as.numeric)
head(game)
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
head(game)
apply(game, 2,as.numeric)
myfunc <- function(x,c1,c2,c3,y)
{
# if((result[x[c1]]>=result[x[c2]]) && x[c3]==1)
# {
#   y++
#   print(1)
# }
#test
print(sum(x[c1],x[c2]))
}
library(reshape2)
apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y<-0)
myfunc <- function(x,c1,c2,c3)
{
if((result[x[c1]]>=result[x[c2]]) && x[c3]==1)
y++
#test
# print(sum(x[c1],x[c2]))
}
myfunc <- function(x,c1,c2,c3)
{
if((result[x[c1]]>=result[x[c2]]) && x[c3]==1)
{ y++}
#test
# print(sum(x[c1],x[c2]))
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
myfunc <- function(x,c1,c2,c3)
{
if((result[x[c1]]>=result[x[c2]]) && x[c3]==1)
{ y++}
#test
# print(sum(x[c1],x[c2]))
}
apply(game,2,as.numeric)
y = 0
myfunc <- function(x,c1,c2,c3)
{
if((result[x[c1]]>=result[x[c2]]) && x[c3]==1)
{ y++}
#test
# print(sum(x[c1],x[c2]))
}
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
head(game)
head(game)
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
head(game)
#转换类型
apply(game,2,as.numeric)
class(game[,])
class(game["H"])
head(result)
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
y++
}
return(y)
#test
# print(sum(x[c1],x[c2]))
}
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
++y
}
return(y)
#test
# print(sum(x[c1],x[c2]))
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
y
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
++y
print("hi")
}
return(y)
#test
# print(sum(x[c1],x[c2]))
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
y <- y+1
#print("hi")
}
return(y)
#test
# print(sum(x[c1],x[c2]))
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
y
y = 0
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
y <- y+1
#print("hi")
}
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
head(game)
#转换类型
apply(game,2,as.numeric)
y = 0
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
y <- y+1
#print("hi")
}
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
head(game)
class(y)
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
++y
#print("hi")
}
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
ss
y
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
head(game)
#转换类型
apply(game,2,as.numeric)
y = 0
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
++y
#print("hi")
}
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
class(ss)
length(ss)
head(ss)
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
print("hi")
}
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
myfunc <- function(x,c1,c2,c3,y)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
#print("hi")
y=y+1
}
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN",y=0)
y
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
#print("hi")
return(1)
}
return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
length(ss)
lengths(ss,use.names = T)
lengths(ss,use.names = F)
table(ss)
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
head(game)
#转换类型
apply(game,2,as.numeric)
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] > result[x[c2]] && x[c3] == 1) {
#print("hi")
return(1)
}
return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
table(ss)
as.data.frame(table(ss))
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] >= result[x[c2]] && x[c3] == 1) {
#print("hi")
return(1)
}
return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
as.data.frame(table(ss))
ss
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] >= result[x[c2]] && x[c3] == 1) {
#print("hi")
return(1)
}
else return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
as.data.frame(table(ss))
source('G:/QingZe/Desktop/gitData/NBAPrediction/董亭/rfe.R', encoding = 'UTF-8')
#读入数据
input <- read.csv('F:/RStudio/Boruta/17four.csv', header=T)
input2 <-read.csv('F:/RStudio/Boruta/16four.csv', header=T)
input3 <- read.csv('F:/RStudio/Boruta/15four.csv', header=T)
input4 <- read.csv('F:/RStudio/Boruta/14four.csv', header=T)
input5 <- read.csv('F:/RStudio/Boruta/13four.csv', header=T)
input <- merge(input,input2,all = T)
input <- merge(input,input3,all = T)
input <- merge(input,input4,all = T)
input <- merge(input,input5,all = T)
input <- input[,c(
'TEAM',		'WINp','EFGp','FTA.RATE',	'TOVp','OREBp',	'OPP.EFGp','OPP.FTA.RATE','OPP.TOVp','OPP.OREBp'
)]
# Create the relationship model.
model <- lm(WINp~EFGp+FTA.RATE +TOVp+OREBp+OPP.EFGp+OPP.FTA.RATE +OPP.TOVp+OPP.OREBp, data = input)
print(model)
test <- read.csv('F:/RStudio/Boruta/18four.csv',header = T)
result <- predict(model, newdata = test)
sort(result,decreasing = T)
print(test["WINp"])
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
head(game)
#转换类型
game <- apply(game,2,as.numeric)
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] >= result[x[c2]] && x[c3] == 1) {
#print("hi")
return(1)
}
else return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
as.data.frame(table(ss))
input <- input[,c(
'TEAM',		'WINp','EFGp','FTA.RATE',	'TOVp','OREBp',	'OPP.EFGp','OPP.FTA.RATE','OPP.TOVp','OPP.OREBp'
)]
#读入数据
input <- read.csv('F:/RStudio/Boruta/17four.csv', header=T)
# Create the relationship model.
model <- lm(WINp~EFGp+FTA.RATE +TOVp+OREBp+OPP.EFGp+OPP.FTA.RATE +OPP.TOVp+OPP.OREBp, data = input)
print(model)
test <- read.csv('F:/RStudio/Boruta/18four.csv',header = T)
result <- predict(model, newdata = test)
sort(result,decreasing = T)
print(test["WINp"])
#测试1230场比赛的正确率
game <- read.csv('F:/RStudio/Boruta/2018RegularNUm.csv', header=T)
head(game)
#转换类型
game <- apply(game,2,as.numeric)
myfunc <- function(x,c1,c2,c3)
{
if (result[x[[c1]]] >= result[x[c2]] && x[c3] == 1) {
#print("hi")
return(1)
}
else return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
as.data.frame(table(ss))
result[2]
myfunc <- function(x,c1,c2,c3)
{
if (result[x[c1]] >= result[x[c2]] && x[c3] == 1) {
#print("hi")
return(1)
}
else return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
as.data.frame(table(ss))
result
print(test["WINp"])
sort(result)
sort(result,decreasing = T)
myfunc <- function(x,c1,c2,c3)
{
if (result[x[c1]]*0.6 >= result[x[c2]]*0.4 && x[c3] == 1) {
#print("hi")
return(1)
}
else return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
as.data.frame(table(ss))
651/1230
myfunc <- function(x,c1,c2,c3)
{
if (result[x[c1]]*0.65 >= result[x[c2]]*0.35 && x[c3] == 1) {
#print("hi")
return(1)
}
else return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
as.data.frame(table(ss))
myfunc <- function(x,c1,c2,c3)
{
if (result[x[c1]]*0.7 >= result[x[c2]]*0.3 && x[c3] == 1) {
#print("hi")
return(1)
}
else return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
as.data.frame(table(ss))
712/1230
myfunc <- function(x,c1,c2,c3)
{
if (result[x[c1]]*0.6 >= result[x[c2]]*0.4 && x[c3] == 1) {
#print("hi")
return(1)
}
else return(0)
#return(y)
#test
# print(sum(x[c1],x[c2]))
}
ss<-apply(game,1,myfunc,c1="H",c2="V",c3="WIN")
as.data.frame(table(ss))
